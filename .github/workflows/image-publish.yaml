---
name: image-publish
on:
  push:
    tags:
      - v*
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  publish:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Set image tags
        id: image-tags
        run: |
          REGISTRY_BASE="quay.io/rhpds/zt-monitoring"

          if [[ "${{ github.ref_type }}" == "tag" ]]; then
            # Extract version from tag (v1.5.7 -> v1.5.7)
            VERSION="${{ github.ref_name }}"

            # Parse semantic version (v1.5.7 -> 1, 5, 7)
            if [[ $VERSION =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
              MAJOR=${BASH_REMATCH[1]}
              MINOR=${BASH_REMATCH[2]}
              PATCH=${BASH_REMATCH[3]}

              # Create tags: v1.5.7, v1.5, v1
              TAGS="${REGISTRY_BASE}:v${MAJOR}.${MINOR}.${PATCH}"
              TAGS="${TAGS},${REGISTRY_BASE}:v${MAJOR}.${MINOR}"
              TAGS="${TAGS},${REGISTRY_BASE}:v${MAJOR}"

              echo "IMAGE_TAGS=${TAGS}" >> $GITHUB_OUTPUT
              echo "PUSH_ENABLED=true" >> $GITHUB_OUTPUT
            else
              echo "Invalid version format: ${VERSION}. Expected format: v1.2.3"
              exit 1
            fi
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref_name }}" == "main" ]]; then
            # Development build from main branch
            echo "IMAGE_TAGS=${REGISTRY_BASE}:${{ github.sha }},${REGISTRY_BASE}:main" >> $GITHUB_OUTPUT
            echo "PUSH_ENABLED=true" >> $GITHUB_OUTPUT
          else
            # PR build - don't push
            echo "IMAGE_TAGS=${REGISTRY_BASE}:pr-${{ github.event.number }}" >> $GITHUB_OUTPUT
            echo "PUSH_ENABLED=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to quay.io registry
        uses: docker/login-action@v3
        if: steps.image-tags.outputs.PUSH_ENABLED == 'true'
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_IO_RHPDS_USERNAME }}
          password: ${{ secrets.QUAY_IO_RHPDS_TOKEN }}

      - name: Build and publish image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Containerfile
          push: ${{ steps.image-tags.outputs.PUSH_ENABLED == 'true' }}
          tags: ${{ steps.image-tags.outputs.IMAGE_TAGS }}
